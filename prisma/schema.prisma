generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id            String    @id @default(cuid())
  email         String?   @unique @db.VarChar(64)
  password      String?
  emailVerified DateTime? @map("email_verified")
  image         String?
  firstName     String?   @map("first_name") @db.VarChar(32)
  isActive      Boolean   @default(true)
  lastName      String?   @map("last_name") @db.VarChar(32)
  nationalId    String?   @unique @map("national_id")
  role          Role      @default(NEW_STUDENT)
  sex           String?   @db.VarChar(1)
  accounts      Account[]
  Session       Session[]

  @@map("users")
}

model Account {
  id                String   @id @default(cuid())
  userId            String   @map("user_id")
  type              String?
  provider          String
  providerAccountId String   @map("provider_account_id")
  token_type        String?
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  scope             String?
  id_token          String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  userId       String?  @map("user_id")
  sessionToken String   @unique @map("session_token")
  accessToken  String?  @map("access_token")
  expires      DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User?    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

enum Role {
  NEW_STUDENT
  ACCEPTED_STUDENT
  COMMUNITY_ANGEL
  ADMIN
}
